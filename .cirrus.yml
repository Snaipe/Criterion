.compile: &compile
  configure_script: meson -Db_lundef=false build
  compile_script: ninja -C build

.test: &test
  test_script: ninja -C build test

.pipeline: &pipeline
  info_script: |
    meson --version
    ninja --version
  <<: *compile
  <<: *test

Debian (gcc)_task:
  container:
    image: debian:12
  setup_script: |-
    apt-get update
    apt-get install -y build-essential pkg-config meson ninja-build cmake git libgit2-dev libffi-dev libnanomsg-dev python3-pip python3-venv
    python3 -m venv .venv
    . .venv/bin/activate
    pip3 install cram==0.7
  <<: *pipeline

Alpine (gcc,x86_64)_task:
  container:
    image: amd64/alpine:3
  setup_script: &alpine-deps |-
    apk add --no-cache build-base pkgconf meson ninja cmake git libgit2-dev libffi-dev py3-pip
    python3 -m venv .venv
    . .venv/bin/activate
    pip3 install cram==0.7
  <<: *pipeline

Alpine (gcc,i386)_task:
  container:
    image: i386/alpine:3
  setup_script: *alpine-deps
  <<: *pipeline

Alpine (gcc,arm32v6)_task:
  arm_container:
    image: arm32v6/alpine:3
  setup_script: *alpine-deps
  <<: *pipeline

Alpine (gcc,arm32v7)_task:
  arm_container:
    image: arm32v7/alpine:3
  setup_script: *alpine-deps
  <<: *pipeline

Alpine (gcc,aarch64)_task:
  arm_container:
    image: arm64v8/alpine:3
  setup_script: *alpine-deps
  <<: *pipeline

MacOS_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-runner:sonoma
  env:
    PKG_CONFIG_PATH: ${PKG_CONFIG_PATH}:/usr/local/opt/libffi/lib/pkgconfig
  setup_script: |-
    brew install meson cmake pkg-config libffi libgit2 nanomsg
    python3 -m venv .venv
    . .venv/bin/activate
    pip3 install cram==0.7
  <<: *pipeline

FreeBSD_task:
  freebsd_instance:
    image_family: freebsd-14-2
  setup_script: |-
    pkg install -y gettext-tools pkgconf cmake meson git libffi libgit2 nanomsg
    python3 -m ensurepip
    python3 -m venv .venv
    . .venv/bin/activate
    python3 -m pip install --upgrade pip
    python3 -m pip install cram==0.7
  <<: *pipeline

Windows (mingw-gcc)_task:
  windows_container:
    image: cirrusci/windowsservercore:cmake
    os_version: 2019
  env:
    PATH: C:\\Python;C:\\Python\\Scripts;C:\\ProgramData\\chocolatey\\lib\\ninja\\tools;%PATH%
  setup_script: |-
    choco install -y --no-progress python311 --params "/InstallDir:C:\Python"
    choco install -y --no-progress ninja cmake
    pip install meson cram==0.7
    git config --global core.autocrlf false
    patch --forward --directory="C:\\Python\\Lib\\site-packages\\cram" < ci/cram-fix-winenv.patch
    patch --forward --directory="C:\\Python\\Lib\\site-packages\\cram" < ci/cram-ignore-cr.patch
  <<: *compile
  test_script: meson devenv -C build ninja test
